{
   "namespace": "foons",
   "streamIdSuffix": "session",
   "description": "Spec for processing multiple events into different tables in a single stream.",
   "version": 1,
   "source": {
      "type": "kafka",
      "config": {
         "topics": [
            {
               "env": "all",
               "topics": [
                  "foo.events"
               ]
            }
         ],
         "properties": [
            {
               "key": "group.id",
               "value": "foons_session"
            }
         ]
      }
   },
   "transform": {
      "extractFields": [
         {
            "forEventsWith": [
               {
                  "key": "foo.evtType",
                  "value": "FOO_SESSION_BEGIN"
               }
            ],
            "fields": [
               {
                  "id": "name",
                  "jsonPath": "foo.evtType"
               },
               {
                  "id": "custId",
                  "jsonPath": "foo.custId"
               },
               {
                  "id": "sessionId",
                  "jsonPath": "bar.stuff.sId"
               },
               {
                  "id": "pId",
                  "jsonPath": "bar.stuff.pInfo.pId"
               },
               {
                  "id": "pName",
                  "jsonPath": "bar.stuff.pInfo.pName"
               },
               {
                  "id": "pCurrency",
                  "jsonPath": "bar.stuff.pInfo.pCur"
               }
            ]
         },
         {
            "forEventsWith": [
               {
                  "key": "foo.evtType",
                  "value": "FOO_SESSION_END"
               }
            ],
            "fields": [
               {
                  "id": "name",
                  "jsonPath": "foo.evtType"
               },
               {
                  "id": "custId",
                  "jsonPath": "foo.custId"
               },
               {
                  "id": "sessionId",
                  "jsonPath": "bar.stuff.sId"
               },
               {
                  "id": "pId",
                  "jsonPath": "bar.stuff.pInfo.pId"
               },
               {
                  "id": "pHostIp",
                  "jsonPath": "bar.stuff.pHostIp"
               }
            ]
         }
      ]
   },
   "sink": {
      "type": "bigtable",
      "config": {
         "tables": [
            {
               "name": "p_master_data",
               "rowKey": {
                  "keys": [
                     "custId",
                     "pId"
                  ],
                  "delimiter": "#"
               },
               "whitelist": {
                  "id": "name",
                  "type": "or",
                  "values": [
                     "FOO_SESSION_BEGIN"
                  ]
               },
               "columnFamilies": [
                  {
                     "name": "d",
                     "garbageCollectionPolicy": {
                        "type": "maxVersions",
                        "value": 10
                     },
                     "columnQualifiers": [
                        {
                           "id": "sessionId",
                           "name": "sid"
                        },
                        {
                           "id": "pName",
                           "name": "pn"
                        },
                        {
                           "id": "pCurrency",
                           "name": "pc"
                        }
                     ]
                  }
               ]
            },
            {
               "name": "s_master_data",
               "rowKey": {
                  "keys": [
                     "sessionId",
                     "custId"
                  ],
                  "delimiter": "#"
               },
               "whitelist": {
                  "id": "name",
                  "type": "and",
                  "values": [
                     "FOO_SESSION_END"
                  ]
               },
               "columnFamilies": [
                  {
                     "name": "d",
                     "garbageCollectionPolicy": {
                        "type": "maxVersions",
                        "value": 10
                     },
                     "columnQualifiers": [
                        {
                           "id": "pId",
                           "name": "pid"
                        },
                        {
                           "id": "pHostIp",
                           "name": "ip"
                        }
                     ]
                  }
               ]
            }
         ]
      }
   }
}